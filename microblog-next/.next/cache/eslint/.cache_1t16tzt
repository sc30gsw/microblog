[{"/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/404.js":"1","/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/500.js":"2","/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/_app.js":"3","/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/api/hello.js":"4","/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/index.js":"5","/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/posts/[id].js":"6","/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/components/Layout.js":"7","/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/lib/post.js":"8"},{"size":104,"mtime":1668420564039,"results":"9","hashOfConfig":"10"},{"size":98,"mtime":1668420564039,"results":"11","hashOfConfig":"10"},{"size":137,"mtime":1668159407389,"results":"12","hashOfConfig":"10"},{"size":170,"mtime":1668159407390,"results":"13","hashOfConfig":"10"},{"size":1569,"mtime":1668420564040,"results":"14","hashOfConfig":"10"},{"size":1512,"mtime":1668420564040,"results":"15","hashOfConfig":"10"},{"size":1157,"mtime":1668420564035,"results":"16","hashOfConfig":"10"},{"size":2067,"mtime":1668420564035,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fptdq7",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/404.js",[],[],"/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/500.js",[],[],"/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/_app.js",[],[],"/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/api/hello.js",[],[],"/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/index.js",["44"],[],"import Link from \"next/link\";\nimport Layout, { siteTitle } from \"../components/Layout\";\nimport utilStyle from \"../styles/utils.module.css\";\nimport style from \"../styles/Home.module.css\";\nimport getPostsData from \"../lib/post\";\nimport Head from \"next/head\";\n\n// SSGの場合\nexport async function getStaticProps() {\n\tconst allPostsData = getPostsData();\n\tconsole.log(allPostsData);\n\n\treturn {\n\t\tprops: {\n\t\t\tallPostsData,\n\t\t},\n\t};\n}\n\n// SSRの場合\n// export async function getServerSideProps(context) {\n// \treturn {\n// \t\tprops: {\n// \t\t\t// コンポーネントに渡すための情報\n// \t\t},\n// \t};\n// }\n\nexport default function Home({ allPostsData }) {\n\treturn (\n\t\t<Layout home>\n\t\t\t<Head>\n\t\t\t\t<title>{siteTitle}</title>\n\t\t\t</Head>\n\t\t\t<section>\n\t\t\t\t<p className={utilStyle.headingMd}>\n\t\t\t\t\t私はフルスタックエンジニアです/Udemy講師として活動しています/好きな言語はJavascriptです\n\t\t\t\t</p>\n\t\t\t</section>\n\n\t\t\t<section>\n\t\t\t\t<h2 className={style.blogTitle}>📝エンジニアのブログ</h2>\n\t\t\t\t<div className={style.grid}>\n\t\t\t\t\t{allPostsData.map((post) => (\n\t\t\t\t\t\t<article key={post.id}>\n\t\t\t\t\t\t\t<Link href={`/posts/${post.id}`}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={post.thumbnail}\n\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\tclassName={style.thumbnailImage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link legacyBehavior href={`/posts/${post.id}`}>\n\t\t\t\t\t\t\t\t<a className={utilStyle.boldText}>{post.title}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<small className={utilStyle.lightText}>{post.date}</small>\n\t\t\t\t\t\t</article>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</Layout>\n\t);\n}\n","/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/pages/posts/[id].js",[],[],"/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/components/Layout.js",["45","46","47","48"],[],"import Head from \"next/head\";\nimport style from \"./layout.module.css\";\nimport utilStyle from \"../styles/utils.module.css\";\nimport Link from \"next/link\";\n\nconst name = \"Shin code\";\nexport const siteTitle = \"Next.js blog\";\n\nfunction Layout({ children, home }) {\n\treturn (\n\t\t<div className={style.container}>\n\t\t\t<Head>\n\t\t\t\t<link rel=\"icon\" href=\"/favicon.ico\" />\n\t\t\t</Head>\n\t\t\t<header className={style.header}>\n\t\t\t\t{/* Layoutの呼び出しがHomeである場合 */}\n\t\t\t\t{home ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc=\"/images/profile.png\"\n\t\t\t\t\t\t\tclassName={`${utilStyle.borderCircle} ${style.headerHomeImage}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<h1 className={utilStyle.heading2Xl}>{name}</h1>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<img src=\"/images/profile.png\" className={utilStyle.borderCircle} />\n\t\t\t\t\t\t<h1 className={utilStyle.heading2Xl}>{name}</h1>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</header>\n\t\t\t{/* propsを設定することで、import先でmainの中身を各自で設定できる */}\n\t\t\t<main>{children}</main>\n\t\t\t{/* Layoutの呼び出しがHomeでない場合 */}\n\t\t\t{!home && (\n\t\t\t\t<div>\n\t\t\t\t\t<Link href=\"/\">ホームへ戻る</Link>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Layout;\n","/Users/kakikaito/dev/nextjsPj/microblog/microblog-next/lib/post.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":47,"column":9,"nodeType":"51","endLine":51,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":19,"column":7,"nodeType":"51","endLine":22,"endColumn":9},{"ruleId":"52","severity":1,"message":"53","line":19,"column":7,"nodeType":"51","endLine":22,"endColumn":9},{"ruleId":"49","severity":1,"message":"50","line":27,"column":7,"nodeType":"51","endLine":27,"endColumn":75},{"ruleId":"52","severity":1,"message":"53","line":27,"column":7,"nodeType":"51","endLine":27,"endColumn":75},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]